# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# https://peps.python.org/pep-0621/
[project]
name = "app-model"
description = "Generic application schema implemented in python"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "BSD 3-Clause License" }
authors = [{ email = "talley.lambert@gmail.com" }, { name = "Talley Lambert" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Desktop Environment",
    "Topic :: Software Development",
    "Topic :: Software Development :: User Interfaces",
]
dynamic = ["version"]
dependencies = [
    "psygnal>=0.3.4",
    "pydantic>=1.8",
    "pydantic-compat>=0.1.1",
    "in-n-out>=0.1.5",
    "typing_extensions",
]

# extras
# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
test = ["pytest>=6.0", "pytest-cov"]
test-qt = ["pytest-qt", "fonticon-fontawesome6", "qtpy", "superqt[iconify]"]
qt = ["qtpy", "superqt[iconify]"]
dev = [
    "black",
    "ipython",
    "isort",
    "mypy",
    "pdbpp",
    "pre-commit",
    "pydocstyle",
    "pytest-cov",
    "pytest",
    "rich",
]
docs = [
    "griffe-fieldz",
    "griffe==0.36.9",
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-macros-plugin==1.0.5",
    "mkdocs-material==9.4.1",
    "mkdocs==1.5.3",
    "mkdocstrings-python==1.7.3",
    "mkdocstrings==0.23.0",
    "typing_extensions>=4.0",
]

[project.urls]
homepage = "https://github.com/pyapp-kit/app-model"
repository = "https://github.com/pyapp-kit/app-model"

[tool.hatch.version]
source = "vcs"

[tool.hatch.envs.test]
features = ["test"]
[tool.hatch.envs.test.scripts]
run = "pytest  -v --color=yes --cov-config=pyproject.toml -W i --cov=app_model --cov-report=xml --cov-report=term-missing"


# https://pycqa.github.io/isort/docs/configuration/options.html
[tool.isort]
profile = "black"
src_paths = ["src/app_model", "tests"]

# https://github.com/charliermarsh/ruff
[tool.ruff]
line-length = 88
src = ["src", "tests"]
target-version = "py38"
select = [
    "E",    # style errors
    "W",    # style warnings
    "F",    # flakes
    "D",    # pydocstyle
    "I",    # isort
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
    "TID",  # tidy imports
    "TCH",  # type checking
]
ignore = [
    "D100", # Missing docstring in public module
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line
    "D401", # First line should be in imperative mood
    "D413", # Missing blank line after last section
    "D416", # Section name should end with a colon
]

[tool.ruff.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.per-file-ignores]
"tests/*.py" = ["D", "E501"]
"demo/*" = ["D"]
"docs/*" = ["D"]
"src/app_model/_registries.py" = ["D10"]
"src/app_model/context/_expressions.py" = ["D10"]
"src/app_model/types/_keys/*" = ["E501"]

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
filterwarnings = ["error", "ignore:Enum value:DeprecationWarning:superqt"]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/*.py"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = ["tests.*", "docs.*"]
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = ["qtpy.*"]
implicit_reexport = true

[tool.coverage.run]
source = ["app_model"]

# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "return NotImplemented",
    "pass",
]
skip_covered = true
show_missing = true

# https://github.com/mgedmin/check-manifest#configuration
[tool.check-manifest]
ignore = [
    ".github_changelog_generator",
    ".pre-commit-config.yaml",
    "tests/**/*",
    "codecov.yml",
    "demo/**/*",
    "docs/**/*",
    ".readthedocs.yaml",
    "mkdocs.yml",
    "CHANGELOG.md",
    ".ruff_cache/**/*",
]

[tool.typos]
default.extend-ignore-identifiers-re = ["to_string_ser_schema"]
