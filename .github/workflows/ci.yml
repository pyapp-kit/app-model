name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request: {}
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-manifest:
    name: Check Manifest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx run check-manifest

  test:
    uses: pyapp-kit/workflows/.github/workflows/test-pyrepo.yml@main
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}
      pip-force-installs: ${{ matrix.pydantic }}
      qt: ${{ matrix.qt }}
      extras: ${{ matrix.qt == '' && 'test' || 'test,test-qt' }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.10", "3.12"]
        os: [ubuntu-latest, macos-latest, windows-latest]
        pydantic: [""]
        qt: ["", PyQt5, PyQt6, PySide2, PySide6]
        include:
          - python-version: "3.9"
            platform: "ubuntu-latest"
          - python-version: "3.11"
            platform: "ubuntu-latest"
          - python-version: "3.12"
            platform: "ubuntu-latest"
            pydantic: "'pydantic<2'"
          - python-version: "3.8"
            platform: "ubuntu-latest"
            pydantic: "'pydantic<2'"
          - python-version: "3.8"
            platform: "ubuntu-latest"
            qt-backend: "PyQt5==5.12"
        exclude:
          - qt: PySide2
            python-version: "3.12"

  test_napari:
    name: napari (${{ matrix.napari-version }}, ${{ matrix.qt-backend }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        napari-version: [""] # "" is HEAD
        qt-backend: [pyqt5, pyside2]

    steps:
      - uses: actions/checkout@v4
        with:
          path: app-model

      - uses: actions/checkout@v4
        with:
          repository: napari/napari
          path: napari
          fetch-depth: 0
          ref: ${{ matrix.napari-version }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - uses: tlambert03/setup-qt-libs@v1

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -e app-model
          python -m pip install -e napari[testing,${{ matrix.qt-backend }}]

      - name: Test
        uses: aganders3/headless-gui@v1
        with:
          working-directory: napari
          run: python -m pytest napari/_qt napari/_app_model --color=yes -x

  deploy:
    name: Deploy
    needs: [check-manifest, test, test_napari]
    if: success() && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: ðŸ‘· Build
        run: |
          python -m pip install build
          python -m build

      - name: ðŸš¢ Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: "./dist/*"
